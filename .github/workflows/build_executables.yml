name: Build Executables

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install PyInstaller
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller --onefile BruckerCo.py
        shell: bash

      - name: Create .dmg (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install create-dmg
          mkdir -p dist/BruckerCo.app/Contents/MacOS
          mv dist/BruckerCo dist/BruckerCo.app/Contents/MacOS/
          create-dmg --overwrite dist/BruckerCo.app dist/BruckerCo.dmg
        shell: bash

      - name: Upload artifact (macOS)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v3
        with:
          name: executable-macos
          path: dist/BruckerCo.dmg

      - name: Upload artifact (Linux and Windows)
        if: runner.os != 'macOS'
        uses: actions/upload-artifact@v3
        with:
          name: executable-${{ matrix.os }}
          path: dist/

      - name: Cleanup (Linux and macOS)
        if: runner.os != 'Windows'
        run: |
          rm -rf build dist *.spec

      - name: Cleanup (Windows)
        if: runner.os == 'Windows'
        run: |
          Remove-Item -Recurse -Force build, dist, *.spec
        shell: pwsh
